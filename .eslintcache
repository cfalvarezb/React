[{"/Users/macuser/Documents/Code/react-udemy-curso/src/App.js":"1","/Users/macuser/Documents/Code/react-udemy-curso/src/index.js":"2","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/conditional.js":"3","/Users/macuser/Documents/Code/react-udemy-curso/src/reportWebVitals.js":"4","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/forms.js":"5","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales29to32.js":"6","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales38to40.js":"7","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales41to55.js":"8","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales56to60.js":"9","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/container-component/presentational.js":"10","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/container-component/index.js":"11"},{"size":3293,"mtime":1615861733589,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1606187305084,"results":"14","hashOfConfig":"13"},{"size":1376,"mtime":1606445432329,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1606187305085,"results":"16","hashOfConfig":"13"},{"size":2295,"mtime":1606877928298,"results":"17","hashOfConfig":"13"},{"size":1172,"mtime":1606872462804,"results":"18","hashOfConfig":"13"},{"size":1886,"mtime":1611026824332,"results":"19","hashOfConfig":"13"},{"size":13769,"mtime":1612741156773,"results":"20","hashOfConfig":"13"},{"size":2538,"mtime":1622518796071,"results":"21","hashOfConfig":"13"},{"size":903,"mtime":1622519278026,"results":"22","hashOfConfig":"13"},{"size":540,"mtime":1622518219433,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nb1fbx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macuser/Documents/Code/react-udemy-curso/src/App.js",[],["53","54"],"/Users/macuser/Documents/Code/react-udemy-curso/src/index.js",[],["55","56"],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/conditional.js",[],["57","58"],"/Users/macuser/Documents/Code/react-udemy-curso/src/reportWebVitals.js",[],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/forms.js",[],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales29to32.js",[],["59","60"],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales38to40.js",["61"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Box extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div style={{ border: '1px solid #000', margin: 5, padding: 5 }} >\n\t\t\t\t{this.props.children}\n\t\t\t</div>\t\n\t\t)\n\t}\n}\n\nexport class Tutorial38 extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Box>Hola Soy un children</Box>\n\t\t\t\t<Box>Hola Soy otro children</Box>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport class Article extends Component{\n\n\tstatic propTypes = {\n\t\tauthor: PropTypes.string.isRequired //indicamos que se siempre se debe ser requerido\n\t}\n\n\tconstructor( props ){\n\t\tsuper( props );\n\t\t//if( typeof props.author === 'undefined' ){\n\t\t//\tconsole.warn('Author prop is required');\n\t\t//\tthrow new Error('author prop is requierd');\n\t\t//}\n\t\t//manera ambigua para validar que el atributo es requerido\n\t}\n\trender(){\n\n\t\tconst {tittle, author, date, children } = this.props;\n\n\t\treturn(\n\t\t\t<section>\n\t\t\t\t<h2>{tittle}</h2>\n\t\t\t\t{ author && <p><em>Escrito por {author}</em></p> /* condicional si viene algo en author renderice de lo contrario no */ } \n\t\t\t\t<Box>{date}</Box>\n\t\t\t\t<article>\n\t\t\t\t\t{children}\n\t\t\t\t</article>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\n//Article.propTypes = {\n//\tauthor: PropTypes.string\n//}\n//Manera no preferida de declarar props porque queda el codigo menos recogido\n\nexport class Tutorial39 extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<Article\n\t\t\t//author='Cristian'\n\t\t\t//author={true}\n\t\t\t date={new Date().toLocaleDateString()}\n\t\t\t title='Articulo sobre la prop children'\n\t\t\t >\n\t\t\t <p>El contenido que envolvemos dentro del componente Article sera enviado al componente como this.props.children. </p>\n\t\t\t <strong>Y mantiene las etiquetas y componentes que se hayan añadido dentro</strong>\n\t\t\t</Article>\n\t\t)\n\t}\n}\n\nexport default class Turotiales38To40 extends Component{\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Tutorial38/>\n\t\t\t\t<Tutorial39/>\n\t\t\t</div>\n\t\t) \n\t}\n\n}",["62","63"],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales41to55.js",["64"],"/*\nCiclos de vida del componente\n\nCuando se habla de ciclos de vida son los estados por los que pasa cada componente existen 3 fases que son montaje, \nactualizacion y desmontaje, Se puede controlar cada una de ellas y se debe tener en cuenta que utilizar en cada ciclo.\n\nMontaje: \n* solo se ejecuta una vez\n* Construye el componente con su estado inicial\n* Obtiene las props que se han pasado\n* Bindeamos metodos de clase\n* Primera ejecucion del metodo render\n\nconstructor(props) -> Se ejecuta siempre y solo lo hace una vez --> Se ejecuta antes de montar el componente\n--> inicializar el estate del componente --> Bindea contextos en los metodos --> No se debe llamar el setState\ncomponentWillMount() -> Construye el componente con su estado inicial --> Se ejecuta una vez --> Se invoca antes de\nmontar el componente y antes del render\nrender() -> Obtiene las props\ncomponentDidMount() -> Primera ejecucion del metodo render\n-> Termina con el componente montado en el DOM -> se puede utilizar el setState --> aqui podemos añadir las llamadas\npara recuperar datos del servidor y escuchar eventos --> ya tendremos una representacion en el DOM --> Se ejecuta\ntras renderizar el componente --> se puede suscribir a eventos del navegador pero se debe quitar la suscripcion \n\nFase de Actualizacion:\n* Por defecto se ejecuta cada vez que recibe props o se actualiza su estado\n* Podemos controlar cuando el componente necesita renderizarse de nuevo\n\ncomponentWillReceiveProps(nextProps) --> Se ejecuta solo cuando el componente va a recibir nuevas props\n--> Util cuando se usa las props para formar el state del componente --> Se puede usar setState y aveces no provoca\notro render\nshouldComponentUpdate(nextProps, nextState) --> Este es el primer metodo que se ejecuta siempre y cuando haya un cam\nbio de state interno del componente --> es el que define si hay render o no --> este metodo retorna true si se quiere\nejecutar de nuevo el render o false cuando no\ncomponenteWillUpdate(nextProps, nextState) --> si devuelve shouldComponentUpdate true pasa a este metodo antes del\nmetodo render --> No se utiliza mucho debido a que aqui solo se preparan cosas antes de montar en el dom como por \nejemplo animaciones --> no se debe llamar setState porque ocasionaria loops ionfinitos\nrender() --> refleja las nuevas props y state del componente --> no se ejecuta si shouldComponenteUpdate devuelve \nfalse --> diffing DOM y montaje/desmontaje de componentes --> no se debe llamar setState o entrara en un loop\ninifinito\ncomponentDidUpdate(prevProps, prevState) --> Se ejecuta tras actualizar el componente --> ejecutar funciones de \nlibrerias externas usar el nuevo DOM usar el nuevo DOM o hacer llamadas Externas --> no se debe llamar el metodo\nsetState o entrara en un loop infinito\n\n\nFase de Desmontaje\n* Alli se deben eliminar listeners\n* Eliminamos referencias al DOM\n* Se ejecuta solo si el componente deja de renderizarse en la aplicacion\n* Solo tiene una fase\n\ncomponentWillUnmount() -> metodo ejecutado justo antes de desmontar complemente del DOM\n--> se libera todo recursos, llamados y demas\n\nFase de error\n\n* Se ejecuta solo cuando el componente lanza una excepcion\n* Solo tiene una fase\n* Permite manejar errores y excepciones\n* Tambien captura excepciones de los children\n\ncomponentDidCatch(error, info) -> \n\n\n*/\n\n\nimport React, { Component, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ComponentFetch extends Component {\n\n    state = {\n        bpi : {\n\n        }\n    }\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount(){\n        console.log('componentDidMount');\n        fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                const { bpi } = data\n                this.setState( { bpi } )\n            })\n    }\n\n    _renderCurrencies () {\n        const { bpi } = this.state\n        const currencies = Object.keys(bpi)\n        return currencies.map(\n            currency => (\n                <div key={currency} >\n                    1 BTC is { bpi[currency].rate }\n                    <span>{currency}</span>\n                </div>\n            )\n        )\n    }\n\n    render(){\n        return(\n            <div>\n                { this._renderCurrencies() }\n            </div>\n        )\n    }\n\n}\n\nclass BotonQueLanzaError extends Component {\n    state = { throwError : false }\n\n    render(){\n        if(this.state.throwError){\n            throw new Error('Error lanzado por el boton')\n        }\n        return(\n            <button onClick={() => this.setState( { throwError : true } )}>\n                Lanzar Error\n            </button>\n        )\n    }\n}\n\nclass EjemploDeComponenteDidCatch extends Component {\n    state = { hasError: false, errorMsg: '' }\n    componentDidCatch(error,errorInfo){\n        console.log('EjemploDeComponenteDidCatch');\n        console.log({error,errorInfo});\n        this.setState({ hasError: true, errorMsg: error.toString() })\n    }\n    render(){\n        if ( this.state.hasError ) {\n            return (\n                <div>\n                    <p>Error en el componente: { this.state.errorMsg }</p>\n                    <button onClick={() => { this.setState({ hasError: false })  }} >\n                        Volver a la aplicacion\n                    </button>\n                </div>\n            )\n        }\n\n        return(\n            <div>\n                <h4>Ciclo de montaje: ComponenteDidCatch</h4>\n                <BotonQueLanzaError />\n            </div>\n        )\n        \n    }\n}\n\nclass ComponenteADesmontar extends Component {\n    state = { windowWidth: 0 }\n\n    _updateStateWithWindowWidth = () => {\n        console.log('_updateStateWithWindowWidth');\n        this.setState( { windowWidth: document.body.clientWidth } )\n    }\n\n    componentDidMount () {\n        this._updateStateWithWindowWidth()\n        window.addEventListener( 'resize', this._updateStateWithWindowWidth)\n    }\n\n    componentWillUnmount(){\n        console.log('componentWillUnmount');\n        window.removeEventListener('resize', this._updateStateWithWindowWidth)\n    }\n\n    render(){\n        return(\n            <div>\n                <p>Ancho de la ventana: {this.state.windowWidth}</p>\n            </div>\n        )\n    }\n\n}\n\nclass EjemploDeComponentWillUnMount extends Component {\n    state = { mostrarComponente: true }\n\n    render(){\n        if(this.state.mostrarComponente){\n            return (\n                <di>\n                    <h4>Ciclo de Desmontaje: ComponentWillUnMount</h4>\n                    <ComponenteADesmontar />\n                    <button onClick={() => this.setState({ mostrarComponente: false })} >\n                        Desmontar Componente\n                    </button>\n                    \n                </di>\n            )\n        }\n        return(<p>Componente Desmontado</p>)\n    }\n}\n\nconst ANIMAL_IMAGES = {\n    cat: 'https://goo.gl/PoQQXb',\n    dolphin: 'https://goo.gl/BbiKCd',\n    panda: 'https://goo.gl/oNbtoq'\n}\n\nconst ANIMALS = Object.keys(ANIMAL_IMAGES);\n\nclass AnimalImage extends PureComponent{\n    state = { src : ANIMAL_IMAGES[this.props.animal] }\n\n    componentWillReceiveProps (nextProps) {\n        console.clear()\n        console.log(\"1. componentWillReceiveProps\")\n        console.log(nextProps)\n        this.setState({ src: ANIMAL_IMAGES[nextProps.animal] })\n    }\n\n    // se comentarea debido a que con PureComponent esta validacion es automatica\n    // shouldComponentUpdate(nextProps){\n    //     console.log('2. shouldComponentUpdate')\n    //     console.log('Anterior: ' + this.props.animal)\n    //     console.log('Nuevo: ' + nextProps.animal)\n\n\n\n    //     return this.props.animal !== nextProps.animal\n    // }\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('3. componentWillUpdate ', nextProps, nextState)\n        const img = document.querySelector('img')\n        console.log('from img element ', { alt: img.alt })\n        // web animations api\n        img.animate([{\n            filter: 'blur(0px)'\n        },{\n            filter: 'blur(2px)'\n        }],{\n            duration: 500,\n            easing: 'ease'\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        console.log('4. componentDidUpdate')\n        const img = document.querySelector('img')\n        // web animations api\n        img.animate([{\n            filter: 'blur(2px)'\n        },{\n            filter: 'blur(0px)'\n        }],{\n            duration: 1500,\n            easing: 'ease'\n        })\n        console.log('from img element ', { alt: img.alt })\n    }\n\n    render(){\n        console.log('1. al montar / 3. al actualizar | render')\n        return(\n            <div>\n                <p>Selected {this.props.animal}</p>\n                <img\n                    alt={this.props.animal}\n                    src={this.state.src}\n                    width='250'\n                />\n            </div>\n        )\n    }\n}\n\nAnimalImage.propTypes = {\n    animal: PropTypes.oneOf(ANIMALS)\n}\n\n// AnimalImage.defaultProps = {\n//     animal: 'panda'\n// }\n\nexport class ComponentWillReceiveProps extends Component {\n    state = { \n        animal: 'panda'\n    }\n\n    _renderAnimalButton = (animal) => {\n        return(\n            <button \n                key={animal} \n                onClick={ () => { this.setState({ animal: animal }) } } \n                /*disabled={ animal === this.state.animal } */ >\n                {animal}\n            </button>\n        )\n    }\n\n    render(){\n        return (\n            <div>\n                <h4>Ciclo de actualizacion, Ejemplo de : ComponentWillReceiveProps</h4>\n                <AnimalImage animal={this.state.animal} />\n                {ANIMALS.map(this._renderAnimalButton)}\n             \n            </div>\n        )\n    }\n}\n\nexport class ComponentDidMount extends Component {\n\n    constructor (props) {\n        console.log('Constructor');\n        super(props);\n        this.state = { mensaje: 'Mensaje Inicial' }\n    }\n\n    componentWillMount () { \n        // no es muy recomendado porque para eso se utiliza el contructor si hay mucho codigo en el constructor \n        //se puede implementar\n        console.log('componentWillMount')\n        this.setState({ mensaje: 'Mensaje modificado' })\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.setState({ otroState: '' }) //Cuando se cambia un state se vuelve a ejecutar el render\n        document.addEventListener('scroll', () => {\n            console.log(window.scrollY);\n        })\n    }\n\n    render () {\n        console.log('render');\n        return (\n            <div>\n                <h4>Ciclo de mensaje: ComponentDidMount</h4>\n                <p>En este componente nos muestra como podemos utilizar el componente did mount</p>\n                <p>Como vamos añadir un evento al escroll vamos a hacer que</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p>\n                <p></p>\n            </div>\n        )\n    }\n}\n\nexport class Render extends Component {\n\n    constructor (props) {\n        console.log('Constructor');\n        super(props);\n        this.state = { mensaje: 'Mensaje Inicial' }\n    }\n\n    componentWillMount () { \n        // no es muy recomendado porque para eso se utiliza el contructor si hay mucho codigo en el constructor \n        //se puede implementar\n        console.log('componentWillMount')\n        this.setState({ mensaje: 'Mensaje modificado' })\n    }\n\n    render () {\n        console.log('render');\n        return [this.state.mensaje === 'Mensaje Inicial' ? 'Sip' : null]\n    }\n}\n\nexport class ComponentWillMount extends Component {\n\n    constructor (props) {\n        console.log('Constructor');\n        super(props);\n        this.state = { mensaje: 'Mensaje Inicial' }\n    }\n\n    componentWillMount () { \n        // no es muy recomendado porque para eso se utiliza el contructor si hay mucho codigo en el constructor \n        //se puede implementar\n        console.log('componentWillMount')\n        this.setState({ mensaje: 'Mensaje modificado' })\n    }\n\n    render () {\n        console.log('render');\n        return(\n            <div>\n                <h4>Ciclo de montaje: componentWillMount</h4>\n                <p>{this.state.mensaje}</p>\n            </div>\n        )\n    }\n}\n\nexport class EjemploConstructor extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = { mensajeInicial: 'Mensaje Inicial' }\n        //this.handleClick = this.handleClick.bind(this); //forma no recomendable\n    }\n\n    handleClick = () => { //forma recomendable para bindear\n        this.setState({ mensajeInicial: 'Mensaje Cambiado' })\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Ciclo de montaje: Constructor</h4>\n                {this.state.mensajeInicial}\n                <button onClick={this.handleClick}>\n                    Cambiar Mensaje\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default class Tutoriales41to55 extends Component {\n    render(){\n        return(\n            <div>\n                <EjemploConstructor/>\n                <ComponentFetch />\n                <ComponentWillReceiveProps />\n                <EjemploDeComponentWillUnMount />\n                <EjemploDeComponenteDidCatch />\n            </div> \n        );\n    }  \n}","/Users/macuser/Documents/Code/react-udemy-curso/src/sections/tutoriales56to60.js",[],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/container-component/presentational.js",[],"/Users/macuser/Documents/Code/react-udemy-curso/src/sections/container-component/index.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":31,"column":2,"nodeType":"77","messageId":"78","endLine":38,"endColumn":3},{"ruleId":"65","replacedBy":"79"},{"ruleId":"67","replacedBy":"80"},{"ruleId":"75","severity":1,"message":"76","line":78,"column":5,"nodeType":"77","messageId":"78","endLine":80,"endColumn":6},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],["81"],["82"],["81"],["82"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["81"],["82"],"no-global-assign","no-unsafe-negation"]